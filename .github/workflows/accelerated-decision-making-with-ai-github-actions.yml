name: accelerated-decision-making-with-ai-github-actions
on: [push]
jobs:
  dashboard:
    runs-on: ubuntu-latest
    environment: main
    defaults:
      run:
        working-directory: Dashboard
    env:
      DEPLOY_BRANCH: ${{ github.ref.type == 'tag' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/github-actions' }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '12.18.4'

      - name: Run set dotenv script
        shell: bash
        env: 
          MAPBOX_API_KEY: ${{ secrets.MAPBOX_API_KEY }}
        run: sh ./scripts/set-dotenv.sh

      - name: Run npm install
        run: npm install

      - name: Run Lint
        run: npm run lint

      - name: Deploy timestamp
        run: echo "DEPLOY_TIMESTAMP=$(date +"%Y%m%d-%H%M%S")" >> $GITHUB_ENV
      
      - name: Docker build
        run: docker build -t pmai-dashboard:$DEPLOY_TIMESTAMP-$GITHUB_RUN_ID-$GITHUB_REF_NAME -t pmai-dashboard:latest .

      - name: Set build condition env variable
        run: |
          git pull
          if sh ../.github/scripts/build-condition.sh origin/main Dashboard; then echo "DEPLOY_CONDITION=true" >> $GITHUB_ENV; else echo "DEPLOY_CONDITION=false"; fi
        shell: bash

      - if: ${{ env.DEPLOY_BRANCH && env.DEPLOY_CONDITION }}
        name: Deploy
        run: sh ./scripts/main.sh
        shell: bash
        env:
          DEPLOY_TIMESTAMP: ${{ env.DEPLOY_TIMESTAMP }}
          TRAVIS_BUILD_NUMBER: ${{ github.run.id }}
          GITHUB_REF_NAME: ${{ github.ref.name }}
          FUNC_ID_BLUEMIX_API_KEY: ${{ secrets.FUNC_ID_BLUEMIX_API_KEY }}
          MAPBOX_API_KEY: ${{ secrets.MAPBOX_API_KEY }}

  website:
    runs-on: ubuntu-latest
    environment: main
    defaults:
      run:
        working-directory: Website
    env:
      DEPLOY_BRANCH: ${{ github.ref.type == 'tag' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/github-actions' }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '12.18.4'
        
      - name: Run npm install/test/deploy
        run: |
          npm i -g gatsby
          npm i
          npm run test
          npm run preDeploy

      - name: Set build condition env variable
        run: |
          git pull
          if sh ../.github/scripts/build-condition.sh origin/main Website; then echo "DEPLOY_CONDITION=true" >> $GITHUB_ENV; else echo "DEPLOY_CONDITION=false"; fi
        shell: bash

      - if: ${{ env.DEPLOY_BRANCH && env.DEPLOY_CONDITION }}
        uses: enriikke/gatsby-gh-pages-action@v2
        with:
          access-token: ${{ secrets.GTHB_OAUTH_TOKEN }}
          deploy-branch: gh-pages
          gatsby-args: --prefix-paths
          working-dir: Website

  datamodels:
    runs-on: ubuntu-latest
    environment: main
    defaults:
      run:
        working-directory: DataModels
    env:
      DEPLOY_BRANCH: ${{ github.ref.type == 'tag' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/github-actions' }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build with Maven
        run: |
          cp settings.xml $HOME/.m2/settings.xml
          mvn -s settings.xml clean package
          mvn -s settings.xml test
          mvn cobertura:cobertura

      - name: Set build condition env variable
        run: |
          git pull
          if sh ../.github/scripts/build-condition.sh origin/main DataModels; then echo "DEPLOY_CONDITION=true" >> $GITHUB_ENV; else echo "DEPLOY_CONDITION=false"; fi
        shell: bash

      - if: ${{ env.DEPLOY_BRANCH && env.DEPLOY_CONDITION }}
        name: Deploy
        run: mvn deploy --settings=settings.xml
        shell: bash
        env:
          FUNC_ID_USERNAME: ${{ secrets.FUNC_ID_USERNAME }}
          FUNC_ID_PASSWORD: ${{ secrets.FUNC_ID_PASSWORD }}
