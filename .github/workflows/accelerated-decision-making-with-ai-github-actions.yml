name: accelerated-decision-making-with-ai-github-actions
on: [push pull_request]

jobs:
  dashboard:
    runs-on: ubuntu-latest
    environment: main
    defaults:
      run:
        working-directory: Dashboard
    env:
      DEPLOY_BRANCH: ${{ github.ref.type == 'tag' || github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '12.18.4'

      - name: Run set dotenv script
        shell: bash
        env: 
          MAPBOX_API_KEY: ${{ secrets.MAPBOX_API_KEY }}
        run: sh ./scripts/set-dotenv.sh

      - name: Run npm install
        run: npm install

      - name: Run Lint
        run: npm run lint

      - name: Deploy timestamp
        run: echo "DEPLOY_TIMESTAMP=$(date +"%Y%m%d-%H%M%S")" >> $GITHUB_ENV
      
      - name: Docker build
        run: docker build -t pmai-dashboard:$DEPLOY_TIMESTAMP-$GITHUB_RUN_ID -t pmai-dashboard:latest .

      - name: Set build condition env variable
        run: |
          git pull
          if sh ../.github/scripts/build-condition.sh origin/main Dashboard; then echo "DEPLOY_CONDITION=true" >> $GITHUB_ENV; else echo "DEPLOY_CONDITION=false"; fi
        shell: bash

      - if: ${{ env.DEPLOY_BRANCH && env.DEPLOY_CONDITION }}
        name: Deploy
        run: sh ./scripts/main.sh
        shell: bash
        env:
          DEPLOY_TIMESTAMP: ${{ env.DEPLOY_TIMESTAMP }}
          TRAVIS_BUILD_NUMBER: ${{ github.run.id }}
          GITHUB_REF_NAME: ${{ github.ref.name }}
          FUNC_ID_BLUEMIX_API_KEY: ${{ secrets.FUNC_ID_BLUEMIX_API_KEY }}
          MAPBOX_API_KEY: ${{ secrets.MAPBOX_API_KEY }}

  website:
    runs-on: ubuntu-latest
    environment: main
    defaults:
      run:
        working-directory: Website
    env:
      DEPLOY_BRANCH: ${{ github.ref.type == 'tag' || github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '12.18.4'
        
      - name: Run npm install/test/deploy
        run: |
          npm i -g gatsby
          npm i
          npm run test
          npm run preDeploy

      - name: Set build condition env variable
        run: |
          git pull
          if sh ../.github/scripts/build-condition.sh origin/main Website; then echo "DEPLOY_CONDITION=true" >> $GITHUB_ENV; else echo "DEPLOY_CONDITION=false"; fi
        shell: bash

      - if: ${{ env.DEPLOY_BRANCH && env.DEPLOY_CONDITION }}
        uses: enriikke/gatsby-gh-pages-action@v2
        with:
          access-token: ${{ secrets.GTHB_OAUTH_TOKEN }}
          deploy-branch: gh-pages
          gatsby-args: --prefix-paths
          working-dir: Website

  datamodels:
    runs-on: ubuntu-latest
    environment: main
    defaults:
      run:
        working-directory: DataModels
    env:
      DEPLOY_BRANCH: ${{ github.ref.type == 'tag' || github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build with Maven
        run: |
          cp settings.xml $HOME/.m2/settings.xml
          mvn -s settings.xml clean package
          mvn -s settings.xml test

      - name: Set build condition env variable
        run: |
          git pull
          if sh ../.github/scripts/build-condition.sh origin/main DataModels; then echo "DEPLOY_CONDITION=true" >> $GITHUB_ENV; else echo "DEPLOY_CONDITION=false"; fi
        shell: bash

      - if: ${{ env.DEPLOY_BRANCH && env.DEPLOY_CONDITION }}
        name: Deploy
        run: mvn deploy --settings=settings.xml
        shell: bash
        env:
          FUNC_ID_USERNAME: ${{ secrets.FUNC_ID_USERNAME }}
          FUNC_ID_PASSWORD: ${{ secrets.FUNC_ID_PASSWORD }}

  appserver:
    runs-on: ubuntu-latest
    environment: main
    defaults:
      run:
        working-directory: Appserver
    env:
      DEPLOY_BRANCH: ${{ github.ref.type == 'tag' || github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build with Maven
        run: |
          cp settings.xml $HOME/.m2/settings.xml
          mvn install -Dmaven.test.skip=true
          mvn test -B
          mvn clean package -Dmaven.test.skip=true
        env:
          FUNC_ID_USERNAME: ${{ secrets.FUNC_ID_USERNAME }}
          FUNC_ID_PASSWORD: ${{ secrets.FUNC_ID_PASSWORD }}

      - name: Deploy timestamp
        run: echo "DEPLOY_TIMESTAMP=$(date +"%Y%m%d-%H%M%S")" >> $GITHUB_ENV
      
      - name: Docker build
        run: docker build -t pmai-taskclerk:latest -t pmai-taskclerk:$DEPLOY_TIMESTAMP-$GITHUB_RUN_ID --build-arg SPRING_ENV=$SPRING_ENV --build-arg APP_VERSION=$APP_VERSION --build-arg POSTGRES_PASS=$POSTGRES_PASS --build-arg KEY_64=$KEY_64 --build-arg KEY_64N=$KEY_64N --build-arg POSTGRES_USERNAME=$POSTGRES_USERNAME --build-arg ENCRYPTION_KEY=$ENCRYPTION_KEY --build-arg HOSTNAME=$HOSTNAME --build-arg POSTGRES_URL=$POSTGRES_URL --build-arg JAR_FILE=target/taskclerk-1.0.0.jar .

      - name: Set build condition env variable
        run: |
          git pull
          if sh ../.github/scripts/build-condition.sh origin/main Appserver; then echo "DEPLOY_CONDITION=true" >> $GITHUB_ENV; else echo "DEPLOY_CONDITION=false"; fi
        shell: bash

      - if: ${{ env.DEPLOY_BRANCH && env.DEPLOY_CONDITION }}
        name: Deploy
        run: sh ./scripts/main.sh
        shell: bash
        env:
          DEPLOY_TIMESTAMP: ${{ env.DEPLOY_TIMESTAMP }}
          TRAVIS_BUILD_NUMBER: ${{ github.run.id }}
          GITHUB_REF_NAME: ${{ github.ref.name }}
          FUNC_ID_BLUEMIX_API_KEY: ${{ secrets.FUNC_ID_BLUEMIX_API_KEY }}
          FUNC_ID_USERNAME: ${{ secrets.FUNC_ID_USERNAME }}
          FUNC_ID_PASSWORD: ${{ secrets.FUNC_ID_PASSWORD }}
          APP_VERSION: ${{ secrets.APP_VERSION }}
          COS_STORAGE: ${{ secrets.COS_STORAGE }}
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
          ENVIRONMENT_COMMAND_NAME: ${{ secrets.ENVIRONMENT_COMMAND_NAME }}
          GTHB_OAUTH_TOKEN: ${{ secrets.GTHB_OAUTH_TOKEN }}
          HOSTNAME: ${{ secrets.HOSTNAME }}
          KEY_64: ${{ secrets.KEY_64 }}
          KEY_64N: ${{ secrets.KEY_64N }}
          POSTGRES_PASS: ${{ secrets.POSTGRES_PASS }}
          POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
          POSTGRES_USERNAME: ${{ secrets.POSTGRES_USERNAME }}

  jobdeploymentservice:
    runs-on: ubuntu-latest
    environment: main
    defaults:
      run:
        working-directory: JobDeploymentService
    env:
      DEPLOY_BRANCH: ${{ github.ref.type == 'tag' || github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Deploy timestamp
        run: echo "DEPLOY_TIMESTAMP=$(date +"%Y%m%d-%H%M%S")" >> $GITHUB_ENV
      
      - name: Docker build
        run: docker build -t jds:$DEPLOY_TIMESTAMP-$GITHUB_RUN_ID -t jds:latest .

      - name: Set build condition env variable
        run: |
          git pull
          if sh ../.github/scripts/build-condition.sh origin/main JobDeploymentService; then echo "DEPLOY_CONDITION=true" >> $GITHUB_ENV; else echo "DEPLOY_CONDITION=false"; fi
        shell: bash

      - if: ${{ env.DEPLOY_BRANCH && env.DEPLOY_CONDITION }}
        name: Deploy
        run: sh ./scripts/main.sh
        shell: bash
        env:
          DEPLOY_TIMESTAMP: ${{ env.DEPLOY_TIMESTAMP }}
          TRAVIS_BUILD_NUMBER: ${{ github.run.id }}
          GITHUB_REF_NAME: ${{ github.ref.name }}
          FUNC_ID_BLUEMIX_API_KEY: ${{ secrets.FUNC_ID_BLUEMIX_API_KEY }}

  optimizationengine:
    runs-on: ubuntu-latest
    environment: main
    defaults:
      run:
        working-directory: OptimizationEngine
    env:
      DEPLOY_BRANCH: ${{ github.ref.type == 'tag' || github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Deploy timestamp
        run: echo "DEPLOY_TIMESTAMP=$(date +"%Y%m%d-%H%M%S")" >> $GITHUB_ENV
      
      - name: Docker build
        run: docker build -t optimization-engine:$DEPLOY_TIMESTAMP-$GITHUB_RUN_ID -t optimization-engine:latest .

      - name: Set build condition env variable
        run: |
          git pull
          if sh ../.github/scripts/build-condition.sh origin/main OptimizationEngine; then echo "DEPLOY_CONDITION=true" >> $GITHUB_ENV; else echo "DEPLOY_CONDITION=false"; fi
        shell: bash

      - if: ${{ env.DEPLOY_BRANCH && env.DEPLOY_CONDITION }}
        name: Deploy
        run: sh ./scripts/main.sh
        shell: bash
        env:
          DEPLOY_TIMESTAMP: ${{ env.DEPLOY_TIMESTAMP }}
          TRAVIS_BUILD_NUMBER: ${{ github.run.id }}
          GITHUB_REF_NAME: ${{ github.ref.name }}
          FUNC_ID_BLUEMIX_API_KEY: ${{ secrets.FUNC_ID_BLUEMIX_API_KEY }}
