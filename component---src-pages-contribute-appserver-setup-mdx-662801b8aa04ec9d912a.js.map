{"version":3,"sources":["webpack:///./src/pages/contribute/appserver_setup.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","AnchorLinks","AnchorLink","Row","Column","ArticleCard","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","colMd","colLg","noGutterMdLeft","title","href","color","actionIcon","isMDXComponent"],"mappings":"wPAOaA,G,oBAAe,IAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAkBL,EAAc,mBAChCM,EAAcN,EAAc,eAC5BO,EAAaP,EAAc,cAC3BQ,EAAMR,EAAc,OACpBS,EAAST,EAAc,UACvBU,EAAcV,EAAc,eAC5BW,EAAc,CAClBZ,gBAEIa,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGb,EACF,8BACD,OAAO,YAACU,EAAD,eAAeD,EAAiBT,EAAhC,CAAuCa,WAAYA,EAAYC,QAAQ,cAI5E,YAACX,EAAD,CAAiBW,QAAQ,mBACvB,qFACA,YAACV,EAAD,CAAaU,QAAQ,eACzB,YAACT,EAAD,CAAYS,QAAQ,cAApB,uCACA,YAACT,EAAD,CAAYS,QAAQ,cAApB,yCACA,YAACT,EAAD,CAAYS,QAAQ,cAApB,uCACA,YAACT,EAAD,CAAYS,QAAQ,cAApB,kBACA,YAACT,EAAD,CAAYS,QAAQ,cAApB,iCAIE,4DACA,qCAAoB,6BAAGC,WAAW,KAAQ,CACtC,KAAQ,+DADQ,QAApB,wGAGA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,4CAAnB,KACA,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC5C,UAAa,gBADI,qCAKvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,oDAAnB,IAA4G,0BAAYA,WAAW,KAAvB,0CAA5G,IAAoM,sBAAQA,WAAW,KAAnB,oBACpM,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC5C,UAAa,eACb,WAAc,6BACd,KAAQ,0BAHS,4FAQrB,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,QAAnB,4FAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,2CACnB,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC5C,UAAa,gBADI,8BAKvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,oDAAnB,IAA4G,0BAAYA,WAAW,KAAvB,iCAA5G,IAA2L,sBAAQA,WAAW,KAAnB,oBAC3L,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC5C,UAAa,eACb,WAAc,oBACd,KAAQ,iBAHS,68BA+BzB,8DACA,+EACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,wBAIL,kHACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBACb,WAAc,iEACd,KAAQ,8DAHP,kxCA+CL,8CACA,qBAAG,sBAAQA,WAAW,KAAnB,SAAH,QAAqD,0BAAYA,WAAW,KAAvB,0BAArD,gFACA,uCACA,iFAAgE,0BAAYA,WAAW,KAAvB,gBAAhE,QAAiI,0BAAYA,WAAW,KAAvB,sBACjI,oDACA,oEACA,8CACA,YAACT,EAAD,CAAKQ,QAAQ,OACX,YAACP,EAAD,CAAQS,MAAO,EAAGC,MAAO,EAAGC,gBAAc,EAACJ,QAAQ,UACjD,YAACN,EAAD,CAAaW,MAAM,gBAAgBC,KAAK,8BAA8BC,MAAM,OAAOC,WAAW,aAAaR,QAAQ,iBAGrH,YAACP,EAAD,CAAQS,MAAO,EAAGC,MAAO,EAAGC,gBAAc,EAACJ,QAAQ,UACjD,YAACN,EAAD,CAAaW,MAAM,8BAA8BC,KAAK,yCAAyCE,WAAW,aAAaR,QAAQ,mBAQvIF,EAAWW,gBAAiB","file":"component---src-pages-contribute-appserver-setup-mdx-662801b8aa04ec9d912a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/accelerated-decision-making-with-ai/accelerated-decision-making-with-ai/Website/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport { OutboundLink } from \"gatsby-plugin-google-analytics\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst Row = makeShortcode(\"Row\");\nconst Column = makeShortcode(\"Column\");\nconst ArticleCard = makeShortcode(\"ArticleCard\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`To setup the application server, follow the following steps:`}</p>\n      <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Encrypt master and server password </AnchorLink> \n  <AnchorLink mdxType=\"AnchorLink\">Install mvn dependencies and package </AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Paste the Configurations YAML File </AnchorLink>  \n  <AnchorLink mdxType=\"AnchorLink\">Setup pgAdmin </AnchorLink>  \n  <AnchorLink mdxType=\"AnchorLink\">Run the Application Server </AnchorLink>  \n  \n      </AnchorLinks>\n    </PageDescription>\n    <h2>{`Encrypt master and server password`}</h2>\n    <p>{`As described `}<a parentName=\"p\" {...{\n        \"href\": \"https://maven.apache.org/guides/mini/guide-encryption.html\"\n      }}>{`here`}</a>{`, encrypt the master and server password to allow access to the ungana-models from Jfog Artifactory.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Create and encrypt master password with `}</strong>{` `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-sh\"\n          }}>{`mvn --encrypt-master-password\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Store the generated encypted master password in `}</strong>{` `}<inlineCode parentName=\"p\">{`\\${user.home}/.m2/settings-security.xml`}</inlineCode>{` `}<strong parentName=\"p\">{`in this format `}</strong></p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-xml\",\n            \"metastring\": \"path=settings-security.xml\",\n            \"path\": \"settings-security.xml\"\n          }}>{`<settingsSecurity>\n<master>{ENCRYPTED_MASTER_PASSWORD}</master>\n</settingsSecurity>\n`}</code></pre>\n        <p parentName=\"li\"><strong parentName=\"p\">{`N.B `}</strong>{`: If the .m2 folder does not exist, create it in the root directory then perform step 2`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Create and encypt sever password with `}</strong></p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-sh\"\n          }}>{`mvn --encrypt-password\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Store the generated encypted server password in `}</strong>{` `}<inlineCode parentName=\"p\">{`\\${user.home}/.m2/settings.xml`}</inlineCode>{` `}<strong parentName=\"p\">{`in this format `}</strong></p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-xml\",\n            \"metastring\": \"path=settings.xml\",\n            \"path\": \"settings.xml\"\n          }}>{`<settings>\n            <servers>\n                <server>\n                    <id>central</id>\n                    <username>SERVER_USERNAME</username>\n                    <password>{ENCRPTED_SERVER_PASSWORD}</password>\n                </server>\n                <server>\n                    <id>snapshots</id>\n                    <username>SERVER_USERNAME</username>\n                    <password>{ENCRPTED_SERVER_PASSWORD}</password>\n                </server>\n                <server>\n                    <id>na-artifactory</id>\n                    <username>SERVER_USERNAME</username>\n                    <password>{ENCRPTED_SERVER_PASSWORD}</password>\n                </server>\n                <server>\n                    <id>na-snapshots</id>\n                    <username>SERVER_USERNAME</username>\n                    <password>{ENCRPTED_SERVER_PASSWORD}</password>\n                </server>\n            </servers>\n        </settings>\n`}</code></pre>\n      </li>\n    </ol>\n    <h2>{`Install mvn dependencies and package`}</h2>\n    <p>{`In the AppServer directory, run the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`mvn clean package\n`}</code></pre>\n    <h2>{`Create the configurations YAML file (application-local.yaml) using the following format:`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\",\n        \"metastring\": \"path=ADMAI/AppServer/src/main/resources/application-local.yaml\",\n        \"path\": \"ADMAI/AppServer/src/main/resources/application-local.yaml\"\n      }}>{`    spring:\n        datasource:\n            jdbc-url: \\${POSTGRES_URL}\n            username: \\${POSTGRES_USERNAME}\n            password: \\${POSTGRES_PASS}\n            driver-class-name: org.postgresql.Driver\n            platform: postgres\n            hikari:\n            connection-test-query: SELECT 1\n            connection-timeout: 60000\n            idle-timeout: 600000\n            max-lifetime: 1800000\n            maximum-pool-size: 20\n        jpa:\n            database: POSTGRESQL\n            show-sql: false\n            hibernate:\n            ddl-auto: update\n            properties:\n            hibernate:\n                dialect: org.hibernate.dialect.PostgreSQL95Dialect\n                format_sql: true\n                jdbc:\n                use_get_generated_keys: true\n                temp:\n                use_jdbc_metadata_defaults: false\n\n        app:\n        version: \\${APP_VERSION}\n        hostname: \\${HOSTNAME}\n        default_data_repo: \\${COS_STORAGE}\n        default_environment_command_name: \\${ENVIRONMENT_COMMAND_NAME}\n        job_batch_timeout: 12\n\n        authentication:\n        encryption:\n            key: \\${ENCRYPTION_KEY}\n        key:\n            base64: \\${KEY_64}\n            base64E: AQAB\n            base64N: \\${KEY_64N}\n\n`}</code></pre>\n    <p>{`Edit the credentials `}</p>\n    <p><strong parentName=\"p\">{`NOTE `}</strong>{` The `}<inlineCode parentName=\"p\">{`application-local.yaml`}</inlineCode>{` file is the configuration file used to setup the server and add a database.`}</p>\n    <h2>{`Setup pgAdmin`}</h2>\n    <p>{`Using the credentials in the application-local.yaml file `}<inlineCode parentName=\"p\">{`add a server`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`create a database`}</inlineCode></p>\n    <h2>{`Run the Application Server`}</h2>\n    <p>{`Run the TaskClerkMainApplication.java file `}</p>\n    <h2>{`Continue setting up…`}</h2>\n    <Row mdxType=\"Row\">\n      <Column colMd={4} colLg={4} noGutterMdLeft mdxType=\"Column\">\n        <ArticleCard title=\"The Dashboard\" href=\"/contribute/dashboard_setup\" color=\"dark\" actionIcon=\"arrowRight\" mdxType=\"ArticleCard\">\n        </ArticleCard>\n      </Column>\n      <Column colMd={4} colLg={4} noGutterMdLeft mdxType=\"Column\">\n        <ArticleCard title=\"The Job Deployment Service \" href=\"/contribute/jobdeploymentservice_setup\" actionIcon=\"arrowRight\" mdxType=\"ArticleCard\">\n        </ArticleCard>\n      </Column>\n    </Row>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}