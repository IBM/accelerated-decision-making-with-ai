{"componentChunkName":"component---src-pages-contribute-appserver-setup-mdx","path":"/contribute/appserver_setup/","result":{"pageContext":{"frontmatter":{"title":"AppServer Setup","description":"Quick start guide for getting developers acclimated with the App Server of the Accelerated Decision Making with AI Project"},"relativePagePath":"/contribute/appserver_setup.mdx","titleType":"page","MdxNode":{"id":"154c80cb-0813-5961-9b13-6826ee8a23c5","children":[],"parent":"e2d646ef-e8f5-5df3-950f-e12eb6ec5951","internal":{"content":"---\ntitle: AppServer Setup\ndescription: Quick start guide for getting developers acclimated with the App Server of the Accelerated Decision Making with AI Project\n---\n\nimport { OutboundLink } from \"gatsby-plugin-google-analytics\"\n\n<PageDescription>\n\nTo setup the application server, follow the following steps:\n<AnchorLinks>\n  <AnchorLink>Encrypt master and server password </AnchorLink> \n  <AnchorLink>Install mvn dependencies and package </AnchorLink>\n  <AnchorLink>Paste the Configurations YAML File </AnchorLink>  \n  <AnchorLink>Setup pgAdmin </AnchorLink>  \n  <AnchorLink>Run the Application Server </AnchorLink>  \n  \n</AnchorLinks>\n\n</PageDescription>\n\n\n## Encrypt master and server password \nAs described [here](https://maven.apache.org/guides/mini/guide-encryption.html), encrypt the master and server password to allow access to the ungana-models from Jfog Artifactory.\n\n1. **Create and encrypt master password with ** \n\n   ```sh\n   mvn --encrypt-master-password\n   ```\n\n2. **Store the generated encypted master password in ** `${user.home}/.m2/settings-security.xml` **in this format **\n\n    ```xml path=settings-security.xml\n    <settingsSecurity>\n    <master>{ENCRYPTED_MASTER_PASSWORD}</master>\n    </settingsSecurity>\n    ```\n    **N.B **: If the .m2 folder does not exist, create it in the root directory then perform step 2\n\n3. **Create and encypt sever password with **\n    ```sh\n    mvn --encrypt-password\n    ```\n\n4. **Store the generated encypted server password in ** `${user.home}/.m2/settings.xml` **in this format **\n\n    ```xml path=settings.xml\n    <settings>\n                <servers>\n                    <server>\n                        <id>central</id>\n                        <username>SERVER_USERNAME</username>\n                        <password>{ENCRPTED_SERVER_PASSWORD}</password>\n                    </server>\n                    <server>\n                        <id>snapshots</id>\n                        <username>SERVER_USERNAME</username>\n                        <password>{ENCRPTED_SERVER_PASSWORD}</password>\n                    </server>\n                    <server>\n                        <id>na-artifactory</id>\n                        <username>SERVER_USERNAME</username>\n                        <password>{ENCRPTED_SERVER_PASSWORD}</password>\n                    </server>\n                    <server>\n                        <id>na-snapshots</id>\n                        <username>SERVER_USERNAME</username>\n                        <password>{ENCRPTED_SERVER_PASSWORD}</password>\n                    </server>\n                </servers>\n            </settings>\n    ```\n     \n\n## Install mvn dependencies and package\nIn the AppServer directory, run the following command:\n```bash\nmvn clean package\n```\n\n## Create the configurations YAML file (application-local.yaml) using the following format:\n\n```yaml path=ADMAI/AppServer/src/main/resources/application-local.yaml\n    spring:\n        datasource:\n            jdbc-url: ${POSTGRES_URL}\n            username: ${POSTGRES_USERNAME}\n            password: ${POSTGRES_PASS}\n            driver-class-name: org.postgresql.Driver\n            platform: postgres\n            hikari:\n            connection-test-query: SELECT 1\n            connection-timeout: 60000\n            idle-timeout: 600000\n            max-lifetime: 1800000\n            maximum-pool-size: 20\n        jpa:\n            database: POSTGRESQL\n            show-sql: false\n            hibernate:\n            ddl-auto: update\n            properties:\n            hibernate:\n                dialect: org.hibernate.dialect.PostgreSQL95Dialect\n                format_sql: true\n                jdbc:\n                use_get_generated_keys: true\n                temp:\n                use_jdbc_metadata_defaults: false\n\n        app:\n        version: ${APP_VERSION}\n        hostname: ${HOSTNAME}\n        default_data_repo: ${COS_STORAGE}\n        default_environment_command_name: ${ENVIRONMENT_COMMAND_NAME}\n        job_batch_timeout: 12\n\n        authentication:\n        encryption:\n            key: ${ENCRYPTION_KEY}\n        key:\n            base64: ${KEY_64}\n            base64E: AQAB\n            base64N: ${KEY_64N}\n\n```\nEdit the credentials \n\n**NOTE ** The `application-local.yaml` file is the configuration file used to setup the server and add a database.\n\n## Setup pgAdmin \nUsing the credentials in the application-local.yaml file `add a server` and `create a database`\n\n\n## Run the Application Server\nRun the TaskClerkMainApplication.java file \n\n## Continue setting up...\n\n<Row>\n<Column colMd={4} colLg={4} noGutterMdLeft>\n<ArticleCard\n  title=\"The Dashboard\"\n  href=\"/contribute/dashboard_setup\"\n  color=\"dark\"\n  actionIcon=\"arrowRight\"\n>\n\n</ArticleCard>\n</Column>\n<Column colMd={4} colLg={4} noGutterMdLeft>\n<ArticleCard\n  title=\"The Job Deployment Service \"\n  href=\"/contribute/jobdeploymentservice_setup\"\n  \n  actionIcon=\"arrowRight\"\n>\n\n</ArticleCard>\n</Column>\n</Row>\n","type":"Mdx","contentDigest":"6b19e88ea2a9470b66a0e23bfab3b312","counter":108,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"AppServer Setup","description":"Quick start guide for getting developers acclimated with the App Server of the Accelerated Decision Making with AI Project"},"exports":{},"rawBody":"---\ntitle: AppServer Setup\ndescription: Quick start guide for getting developers acclimated with the App Server of the Accelerated Decision Making with AI Project\n---\n\nimport { OutboundLink } from \"gatsby-plugin-google-analytics\"\n\n<PageDescription>\n\nTo setup the application server, follow the following steps:\n<AnchorLinks>\n  <AnchorLink>Encrypt master and server password </AnchorLink> \n  <AnchorLink>Install mvn dependencies and package </AnchorLink>\n  <AnchorLink>Paste the Configurations YAML File </AnchorLink>  \n  <AnchorLink>Setup pgAdmin </AnchorLink>  \n  <AnchorLink>Run the Application Server </AnchorLink>  \n  \n</AnchorLinks>\n\n</PageDescription>\n\n\n## Encrypt master and server password \nAs described [here](https://maven.apache.org/guides/mini/guide-encryption.html), encrypt the master and server password to allow access to the ungana-models from Jfog Artifactory.\n\n1. **Create and encrypt master password with ** \n\n   ```sh\n   mvn --encrypt-master-password\n   ```\n\n2. **Store the generated encypted master password in ** `${user.home}/.m2/settings-security.xml` **in this format **\n\n    ```xml path=settings-security.xml\n    <settingsSecurity>\n    <master>{ENCRYPTED_MASTER_PASSWORD}</master>\n    </settingsSecurity>\n    ```\n    **N.B **: If the .m2 folder does not exist, create it in the root directory then perform step 2\n\n3. **Create and encypt sever password with **\n    ```sh\n    mvn --encrypt-password\n    ```\n\n4. **Store the generated encypted server password in ** `${user.home}/.m2/settings.xml` **in this format **\n\n    ```xml path=settings.xml\n    <settings>\n                <servers>\n                    <server>\n                        <id>central</id>\n                        <username>SERVER_USERNAME</username>\n                        <password>{ENCRPTED_SERVER_PASSWORD}</password>\n                    </server>\n                    <server>\n                        <id>snapshots</id>\n                        <username>SERVER_USERNAME</username>\n                        <password>{ENCRPTED_SERVER_PASSWORD}</password>\n                    </server>\n                    <server>\n                        <id>na-artifactory</id>\n                        <username>SERVER_USERNAME</username>\n                        <password>{ENCRPTED_SERVER_PASSWORD}</password>\n                    </server>\n                    <server>\n                        <id>na-snapshots</id>\n                        <username>SERVER_USERNAME</username>\n                        <password>{ENCRPTED_SERVER_PASSWORD}</password>\n                    </server>\n                </servers>\n            </settings>\n    ```\n     \n\n## Install mvn dependencies and package\nIn the AppServer directory, run the following command:\n```bash\nmvn clean package\n```\n\n## Create the configurations YAML file (application-local.yaml) using the following format:\n\n```yaml path=ADMAI/AppServer/src/main/resources/application-local.yaml\n    spring:\n        datasource:\n            jdbc-url: ${POSTGRES_URL}\n            username: ${POSTGRES_USERNAME}\n            password: ${POSTGRES_PASS}\n            driver-class-name: org.postgresql.Driver\n            platform: postgres\n            hikari:\n            connection-test-query: SELECT 1\n            connection-timeout: 60000\n            idle-timeout: 600000\n            max-lifetime: 1800000\n            maximum-pool-size: 20\n        jpa:\n            database: POSTGRESQL\n            show-sql: false\n            hibernate:\n            ddl-auto: update\n            properties:\n            hibernate:\n                dialect: org.hibernate.dialect.PostgreSQL95Dialect\n                format_sql: true\n                jdbc:\n                use_get_generated_keys: true\n                temp:\n                use_jdbc_metadata_defaults: false\n\n        app:\n        version: ${APP_VERSION}\n        hostname: ${HOSTNAME}\n        default_data_repo: ${COS_STORAGE}\n        default_environment_command_name: ${ENVIRONMENT_COMMAND_NAME}\n        job_batch_timeout: 12\n\n        authentication:\n        encryption:\n            key: ${ENCRYPTION_KEY}\n        key:\n            base64: ${KEY_64}\n            base64E: AQAB\n            base64N: ${KEY_64N}\n\n```\nEdit the credentials \n\n**NOTE ** The `application-local.yaml` file is the configuration file used to setup the server and add a database.\n\n## Setup pgAdmin \nUsing the credentials in the application-local.yaml file `add a server` and `create a database`\n\n\n## Run the Application Server\nRun the TaskClerkMainApplication.java file \n\n## Continue setting up...\n\n<Row>\n<Column colMd={4} colLg={4} noGutterMdLeft>\n<ArticleCard\n  title=\"The Dashboard\"\n  href=\"/contribute/dashboard_setup\"\n  color=\"dark\"\n  actionIcon=\"arrowRight\"\n>\n\n</ArticleCard>\n</Column>\n<Column colMd={4} colLg={4} noGutterMdLeft>\n<ArticleCard\n  title=\"The Job Deployment Service \"\n  href=\"/contribute/jobdeploymentservice_setup\"\n  \n  actionIcon=\"arrowRight\"\n>\n\n</ArticleCard>\n</Column>\n</Row>\n","fileAbsolutePath":"/home/runner/work/accelerated-decision-making-with-ai/accelerated-decision-making-with-ai/Website/src/pages/contribute/appserver_setup.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","63531786","63531786","768070550"]}